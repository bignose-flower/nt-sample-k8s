# namespace(Ingress用)
apiVersion: v1
kind: Namespace
metadata:
  name: ingress-space
---
# namespace(API用)
apiVersion: v1
kind: Namespace
metadata:
  name: api-space
---
# ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-sample
  namespace: ingress-space
  # annotations:
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - host: api-sample.local
      http:
        paths:
          - path: /svr1/
            pathType: Prefix
            backend:
              service:
                name: api-service1
                port:
                  number: 8001
          - path: /svr2/
            pathType: Prefix
            backend:
              service:
                name: api-service2
                port:
                  number: 8002
---
apiVersion: v1
kind: Service
metadata:
  name: api-service1
  namespace: ingress-space
spec:
  type: ExternalName
  # ExternalName Format : <service-name>.<namespace-name>.svc.cluster.local
  externalName: api-service1.api-space.svc.cluster.local
---
apiVersion: v1
kind: Service
metadata:
  name: api-service2
  namespace: ingress-space
spec:
  type: ExternalName
  # ExternalName Format : <service-name>.<namespace-name>.svc.cluster.local
  externalName: api-service2.api-space.svc.cluster.local
---
# api-server1
apiVersion: v1
kind: Service
metadata:
  name: api-service1
  namespace: api-space
  labels:
    app: api-service1
spec:
  selector:
    app: api-service1
  ports:
    - protocol: TCP
      port: 8001
      targetPort: 8001
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service1
  namespace: api-space
  labels:
    app: api-service1
spec:
  replicas: 4
  selector:
    matchLabels:
      app: api-service1
  template:
    metadata:
      labels:
        app: api-service1
    spec:
      containers:
        - name: api-service1
          image: bignose1flower/sample-api1
          ports:
            - containerPort: 8001
---
# api-server2
apiVersion: v1
kind: Service
metadata:
  name: api-service2
  namespace: api-space
  labels:
    app: api-service2
spec:
  selector:
    app: api-service2
  ports:
    - protocol: TCP
      port: 8002
      targetPort: 8002
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-service2
  namespace: api-space
  labels:
    app: api-service2
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api-service2
  template:
    metadata:
      labels:
        app: api-service2
    spec:
      containers:
        - name: api-service2
          image: bignose1flower/sample-api2
          ports:
            - containerPort: 8002